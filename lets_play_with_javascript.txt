
1  
<!-- <script>
    let a = [];
    let b = [];
    console.log(a == b);
    console.log(a === b);
</script>  -->
2
<!-- <script>
    let a = [];
    let b = a;
    console.log(a == b);
    console.log(a === b);
</script> -->
3
<!-- <script>
    let a = [20];
    let b = [20];
    console.log(a[0] == b[0]);
    console.log(a[0] === b[0]);

</script> -->
4
<!-- <script>
    let a = [20];
    let b = ['20'];
    console.log(a[0] == b[0]);
    console.log(a[0] === b[0]);

</script> -->
5
<!-- <script>
    let z = [1,2,3,4];
    let a = {name : "john"};
    console.log(...z);
</script> -->
6
<!-- <script>
    console.log(typeof NaN);
</script> -->
7
<!-- <script>
    let a = 10 - -10;
    console.log(a);
</script> -->
8
<!-- <script>
    const set = new Set([1,1,2,3,4]);
    console.log(set);
</script> -->
9
<!-- <script>
    let data = {name : 'john'};
    console.log(delete data.name);
</script> -->
10
<!-- <script>
    let data = {name : 'john'};
    console.log(delete data);
</script> -->
11
<!-- <script>
    alert("Hello");

    [1, 2].forEach(alert);
</script> -->

12
<!-- <script>
    alert("Hello")

    [1, 2].forEach(alert);
</script> -->
<!-- <script>
   
    [1, 2].forEach(alert());
</script> -->
13
<!-- <script>
    const data = ['john', 'peter', 'sam'];
    const [y] = data;
    console.log(y);
</script> -->
14
<!-- <script>
    const data = ['john', 'peter', 'sam'];
    const [y] = data; //how to get second element
    console.log(y);
</script> -->
15
<!-- <script>
   const data = {name: 'john', age: 29, skill: 'JS'};
   console.log(data.name);
   // print name without dot operator
   //?
</script> -->
16
<!-- <script>
    let data = {name: 'john', age: 29, skill: 'JS'};
    let info = {city: 'jaipur', mail: 'john@mail.com'};
    // how to merge both object
    //?
 </script> -->
17
<!-- <script>
    let data = {name: 'john', age: 29, skill: 'JS'};
    let info = {city: 'jaipur', mail: 'john@mail.com'};
    data = {data, ...info};
    console.log(data);
 </script> -->
18
 <!-- <script>
    let data = {name: 'john', age: 29, skill: 'JS'};
    let info = {city: 'jaipur', mail: 'john@mail.com', skill: 'React'};
    data = {...data, ...info};
    console.log(data);
 </script> -->
 19
<!-- <script>
    const name = "John";
    console.log(name());
 </script> -->
 20
<!-- <script>
    const data = false || {} || null;
    console.log(data);
 </script> -->
 21
 <!-- <script>
    const data = false || '' || null;
    console.log(data);
 </script> -->
  <!-- <script>
    const data = false || ' ' || null;
    console.log(data);
 </script> -->
22
<!-- <script>
    const data = null || false || '';
    console.log(data);
 </script> -->
 23
 <!-- <script>
    const data = [] || 0 || true;
    console.log(data);
 </script> -->
 24
 <!-- <script>
    console.log('❤' === '❤')
 </script> -->
25
 <!-- <script>
    let name = 'John';

    function getName(){
        console.log(name);
        let name = 'sam';
    }
    getName();
 </script> -->
 26
 <!-- <script>
    let name = 'John';

    function getName(){
        console.log(name);
    }
    getName();
 </script> -->
 27
 <!-- <script>
    console.log(`${(x => x)('I love ')} my India`);  //template literal
 </script> -->
 28
 <!-- <script>
    function sumValues(x,y,z){
        return x + y + z
    }
    A: sumValues([...1,2,3])
    B: sumValues([...[1,2,3]])
    C: sumValues(...[1,2,3])
    D: sumValues([1,2,3])

    //output should be 6
 </script> -->
 29
 <!-- <script>
    const name = 'I love my India';
    console.log(!typeof name === 'object');
    console.log(!typeof name === 'string');
    console.log(!typeof name === true);
    console.log(!typeof name === false);
 </script> -->
 30
 <!-- <script>
    const name = 'John';
    const age = 21;
    console.log(isNaN(name));
    console.log(isNaN(age));
 </script> -->

 <!-- <script>
    const date2 = {};
    const date1 = {};
    
    
    console.log(date1 >= date2); //output is always true
    console.log(date2 >= date1); //output is always true
    
    </script> -->
 <!-- <script>
    const date2 = {};
    const date1 = {};
    
    
    console.log(date1 > date2); //output is always false
    console.log(date2 > date1); //output is always false
    
    </script> -->

    <script>
    const date1 = new Date('2024-01-01');
const date2 = new Date('2025-01-01');

console.log(date1 >= date2); // false
console.log(date2 >= date1); // true

console.dir(date1);
</script>
    <!-- <script>
        console.log(.4 - .3); //output will be 0.10000000000000003
    </script> -->
------------------------------
let x = 0;
console.log(x++);  
console.log(++x);  
--------------------------------
let a = [1, 2, 3];
let b = a;
b.push(4);
console.log(a);  
------------------------------
console.log([1, 2] + [3, 4]);  
------------------------------
let a = '5';
let b = 2;
console.log(a + b);
console.log(a - b);
--------------------------------
console.log(0.1 + 0.2 === 0.3);
------------------------------
let x = null;
console.log(typeof x);
------------------------------
function sayHi() {
    console.log(name);
    console.log(age);
    var name = "John";
    let age = 30;
}
sayHi();
--------------------------------
console.log(1 < 2 < 3);
console.log(3 > 2 > 1);
------------------------------
const arr = [1, 2, 3];
arr.length = 0;
console.log(arr);
------------------------------
let a = "hello";
a[0] = "H";
console.log(a);
--------------------------------
let person = {
  name: "Alice"
};

const members = [person];
person = null;

console.log(members[0]);
------------------------------
let result = "5" - 2;
console.log(result);
------------------------------
let x = 0;
console.log(x++ + ++x);
--------------------------------
console.log(1 == '1');
console.log(1 === '1');
------------------------------
let x = '5';
let y = 5;
console.log(x == y);
console.log(x === y);
------------------------------
let a = [1, 2];
let b = a;
b = [3, 4];
console.log(a);
console.log(b);
--------------------------------
let a = [10, 20, 30];
let b = a.slice();
b[0] = 100;
console.log(a);
console.log(b);
------------------------------
console.log(NaN == NaN);
------------------------------
let x = [1];
let y = [1];
console.log(x == y);
console.log(x === y);
--------------------------------
console.log([] + []);
console.log([] + {});
console.log({} + []);
------------------------------
console.log(false + true);
------------------------------
console.log(0 == false);
console.log(0 === false);
--------------------------------
console.log([1] + [2] + [3]);
------------------------------
let x = "2" * "3";
console.log(x);
------------------------------
console.log('' == 0);
--------------------------------
let x = "3" + 3;
console.log(x);
------------------------------
let a = {};
let b = Object.create(a);
console.log(b.__proto__ === a);
------------------------------
let a = [1, 2, 3];
a.push(4);
console.log(a.length);
--------------------------------
console.log(2 + 2 * 2);
------------------------------
console.log(1 + '1' - 1);
------------------------------
let a = null;
let b = undefined;
console.log(a == b);
console.log(a === b);
--------------------------------
let a = [1, 2, 3];
let b = [1, 2, 3];
console.log(JSON.stringify(a) === JSON.stringify(b));
------------------------------
let x = !!null;
console.log(x);
------------------------------
console.log(typeof typeof 1);
--------------------------------
console.log(null + 1);
------------------------------
console.log([] == false);
------------------------------
console.log(1 < 2 < 3);
console.log(3 > 2 > 1);
--------------------------------
let x = [10];
x[100] = 100;
console.log(x.length);
------------------------------
let x = 10;
x = x++;
console.log(x);
------------------------------
console.log({} === {});
--------------------------------
console.log(new String("hello") === "hello");
------------------------------
let x = 5;
let y = x++ * ++x;
console.log(y);
------------------------------
console.log([] == ![]);
--------------------------------
console.log(1 + '2' + '2');
console.log(1 + +'2' + '2');
console.log(1 + -'1' + '2');
console.log(+'1' + '1' + '2');
------------------------------
let a = (1, 2, 3);
console.log(a);
------------------------------
function test() {
  return
  {
    message: 'hello'
  };
}
console.log(test());
--------------------------------
let x = 1;
if (function f() {}) {
  x += typeof f;
}
console.log(x);
------------------------------
let a = (function() {
  return typeof arguments;
})();
console.log(a);
------------------------------
let foo = {
  bar: function () {
    return this;
  }
};

let fn = foo.bar;
console.log(fn());
console.log(foo.bar());
--------------------------------
(function(){
  var a = b = 5;
})();
console.log(typeof b);
------------------------------
console.log(0.1 + 0.2 === 0.3);
------------------------------
let x = [typeof x, typeof y];
console.log(x);
var y = 10;
--------------------------------

let x = [typeof y, typeof y];
console.log(x);
var y = 10;
--------------------------------
console.log('2' > '12');
------------------------------
let x = 3;
let y = x++ + ++x + x;
console.log(y);
------------------------------
console.log((function f(){}) instanceof Function);
console.log(typeof f);
--------------------------------
console.log('5' - - '3');
------------------------------
let x = (function() {
  return typeof arguments[0];
})();
console.log(x);
------------------------------
let x = 10;
function foo() {
  console.log(x);
  var x = 20;
}
foo();
--------------------------------
let a = {};
let b = { key: 'b' };
let c = { key: 'c' };
a[b] = 123;
a[c] = 456;
console.log(a[b]);
------------------------------
(function(){
  let a = b = 3;
})();
console.log(b);
console.log(typeof a);
------------------------------
(function(){
  console.log(typeof this);
}).call(1);
--------------------------------
let count = 0;
(function immediate() {
  if (count === 0) {
    let count = 1;
    console.log(count);
  }
  console.log(count);
})();s
------------------------------
let a = 1;
function test() {
  console.log(a);
  let a = 2;
}
test();
------------------------------
console.log(typeof undefined == typeof NULL);
--------------------------------
console.log([,,,].length);
------------------------------
console.log((true + false) > 1);
------------------------------
let obj = { a: 1 };
Object.freeze(obj);
obj.a = 2;
console.log(obj.a);
--------------------------------
console.log(parseInt('1e2'));
------------------------------
console.log(!!'false' == !!'true');
------------------------------
console.log(Math.max() < Math.min());
--------------------------------
let x = NaN;
console.log(x !== x);
------------------------------
(function() {
  let x = (y = 5);
})();
console.log(typeof y);
------------------------------
let obj = {};
console.log(obj.toString === Object.prototype.toString);
--------------------------------
console.log(Number.MIN_VALUE > 0);
------------------------------
let a = [1,2,3];
delete a[1];
console.log(a.length);
console.log(a[1]);
------------------------------
console.log('hello' instanceof String);
console.log(new String('hello') instanceof String);
--------------------------------
function foo() {
  return
  {
    bar: 10
  };
}
console.log(typeof foo());
------------------------------
console.log("b" + "a" + +"a" + "a");
------------------------------
const obj = {
  get name() {
    return 'chat';
  }
};
obj.name = 'gpt';
console.log(obj.name);
--------------------------------
let set = new Set([1, 2, 2, 3, 4]);
console.log([...set]);
------------------------------
console.log(0.1 + 0.2);
console.log((0.1 + 0.2) == 0.3);
------------------------------
let arr = [1, 2, 3];
arr[10] = 11;
console.log(arr.length);
console.log(arr[9]);
--------------------------------
------------------------------
------------------------------


 
